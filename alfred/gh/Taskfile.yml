version: "3"

vars:
  FLAGS: -X github.com/xbpk3t/docs-alfred/cmd.EnabledAutoUpdate={{.ENABLED_AUTO_UPDATE}}
  ENABLED_AUTO_UPDATE: "false"

tasks:
  generate:
    desc: "go generate"
    cmds:
      - |
        if ! command -v go-bindata > /dev/null 2>&1; then
          echo "requires 'go-bindata' (go get -u github.com/kevinburke/go-bindata/go-bindata)"
          exit 1
        fi
        go generate ./...

  release:
    cmds:
      - GOOS=darwin GOARCH={{.ARCH}} CGO_ENABLED=1 go build -ldflags "-s -w -X github.com/xbpk3t/docs-alfred/cmd.EnabledAutoUpdate={{.ENABLED_AUTO_UPDATE}}" -o exe_{{.ARCH}}

  build-and-pack:
    cmds:
      - task: release
        vars:
          ARCH: amd64
      - task: release
        vars:
          ARCH: arm64
      - lipo -create -output .workflow/exe exe_amd64 exe_arm64
      - rm  exe_amd64
      - rm  exe_arm64

      # pack
      - cd .workflow
      #      - plutil -replace version -string "${{ env.tag }}" info.plist
      #      - zip -r ../"docs-alfred_auto_update-${{ env.tag }}.alfredworkflow" .
      #      - cd ..
      #      - echo "artifact=$(echo "docs-alfred_auto_update-${{ env.tag }}.alfredworkflow")" >> $GITHUB_ENV
      #      - plutil -replace version -string 111 info.plist
      - zip -r ../"docs-alfred.alfredworkflow" .
      - cd ..
      - echo "artifact=$(echo "docs-alfred.alfredworkflow")" >> $GITHUB_ENV


  test:
    desc: "run tests"
    cmds:
      - go test -v -race -cover -coverprofile coverage.txt -covermode=atomic ./...

  build:
    desc: "build the binary"
    cmds:
      - ak alfred build -l "{{.FLAGS}}"

  info:
    desc: "show alfred workflow info"
    cmds:
      - ak alfred info

  link:
    desc: "link alfred workflow"
    cmds:
      - ak alfred link

  unlink:
    desc: "unlink alfred workflow"
    cmds:
      - ak alfred unlink

  pack:
    desc: "pack alfred workflow"
    cmds:
      - ak alfred pack

  help:
    desc: "this help"
    cmds:
      - |
        awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_0-9-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST) | sort

  tag:
    cmd: echo "tag=$(jq -r '.release.tag_name' "${GITHUB_EVENT_PATH}" | sed s/^v//)" >> $GITHUB_ENV
